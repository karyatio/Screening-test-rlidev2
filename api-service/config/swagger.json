{
  "swagger": "2.0",
  "info": { "title": "Project for screening test RLIDev2", "version": "1.0.0" },
  "host": "localhost:81",
  "basePath": "/api/v1",
  "securityDefinitions": {
    "Bearer": { "type": "apiKey", "name": "Authorization", "in": "header" }
  },
  "tags": [
    {
      "name": "Authentication",
      "description": "API login and register user, here you can get the access token needed"
    },
    { "name": "Products", "description": "API for Products" },
    {
      "name": "Orders",
      "description": "API for Orders : After creating product a user can create order just by passing access token"
    },
    {
      "name": "ProductOrder",
      "description": "API for ProductOrder : after creating order a user can create product order"
    }
  ],
  "paths": {
    "/orders": {
      "get": {
        "summary": "get all order",
        "tags": ["Orders"],
        "description": "THIS IS TESTING PURPOSE ONLY, IN THE FUTURE ONLY ADMIN CAN ACCESS THIS ENDPOINT",
        "produces": ["application/json"],
        "security": [{ "Bearer": [] }],
        "responses": { "200": { "desription": "OK" } }
      },
      "post": {
        "tags": ["Orders"],
        "summary": "Create order",
        "description": "create order just by passwing token in header",
        "produces": ["application/json"],
        "security": [{ "Bearer": [] }],
        "responses": { "200": { "desription": "OK" } }
      }
    },
    "/orders/{id}": {
      "get": {
        "summary": "get order by id",
        "tags": ["Orders"],
        "description": "get order data by id",
        "produces": ["application/json"],
        "security": [{ "Bearer": [] }],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "description": "id of order you want to find"
          }
        ],
        "responses": { "200": { "desription": "OK" } }
      },
      "delete": {
        "summary": "Delete order with id",
        "tags": ["Orders"],
        "produces": "application/json",
        "security": [{ "Bearer": [] }],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "integer",
            "required": true,
            "description": "id you want to delete"
          }
        ],
        "responses": { "200": { "desription": "OK" } }
      }
    },
    "/orders/{orderId}/products/{productOrderId}": {
      "get": {
        "summary": "get individual product_order",
        "tags": ["ProductOrder"],
        "produces": ["application/json"],
        "security": [{ "Bearer": [] }],
        "parameters": [
          {
            "name": "orderId",
            "in": "path",
            "required": true,
            "type": "integer",
            "description": "id for order resource"
          },
          {
            "name": "productOrderId",
            "in": "path",
            "required": true,
            "type": "integer",
            "description": "id for product_order resource"
          }
        ],
        "responses": { "200": { "description": "OK" } }
      },
      "put": {
        "summary": "update product_order",
        "description": "node that productOrderId param is reference to ProductOrder resource not Product resource",
        "tags": ["ProductOrder"],
        "produces": ["application/json"],
        "security": [{ "Bearer": [] }],
        "parameters": [
          {
            "name": "orderId",
            "in": "path",
            "required": true,
            "type": "integer",
            "description": "id for order resource"
          },
          {
            "name": "productOrderId",
            "in": "path",
            "required": true,
            "type": "integer",
            "description": "id for product_order resource"
          },
          {
            "name": "product order data for update",
            "in": "body",
            "required": true,
            "type": "integer",
            "schema": {
              "properties": { "quantity": { "type": "integer", "example": 10 } }
            }
          }
        ],
        "responses": { "200": { "description": "OK" } }
      },
      "delete": {
        "summary": "delete product_order",
        "description": "remove product in order",
        "tags": ["ProductOrder"],
        "produces": ["application/json"],
        "security": [{ "Bearer": [] }],
        "parameters": [
          {
            "name": "orderId",
            "in": "path",
            "required": true,
            "type": "integer",
            "description": "id for order resource"
          },
          {
            "name": "productOrderId",
            "in": "path",
            "required": true,
            "type": "integer",
            "description": "id for product_order resource"
          }
        ],
        "responses": { "200": { "description": "OK" } }
      }
    },
    "/orders/{orderId}/products": {
      "post": {
        "summary": "create product_order",
        "tags": ["ProductOrder"],
        "produces": ["application/json"],
        "security": [{ "Bearer": [] }],
        "parameters": [
          {
            "name": "orderId",
            "in": "path",
            "required": true,
            "type": "integer",
            "description": "id for order resource"
          },
          {
            "name": "new product order data",
            "in": "body",
            "required": true,
            "type": "integer",
            "schema": {
              "properties": {
                "productId": { "type": "integer", "example": 2 },
                "quantity": { "type": "integer", "example": 4 }
              }
            }
          }
        ],
        "responses": { "200": { "description": "OK" } }
      }
    },
    "/products": {
      "get": {
        "summary": "Get all product",
        "tags": ["Products"],
        "description": "Get all products",
        "produces": ["application/json"],
        "security": [{ "Bearer": [] }],
        "responses": { "200": { "description": "login" } }
      },
      "post": {
        "summary": "Create new product",
        "tags": ["Products"],
        "description": "Create new product",
        "produces": ["application/json"],
        "security": [{ "Bearer": [] }],
        "parameters": [
          {
            "name": "product data",
            "in": "body",
            "required": true,
            "schema": {
              "properties": {
                "code": { "type": "string", "example": "BR001" },
                "name": { "type": "string", "example": "Headset Razer" },
                "price": { "type": "integer", "example": 45000 },
                "stock": { "type": "integer", "example": 45 }
              }
            }
          }
        ],
        "responses": { "200": { "description": "login" } }
      }
    },
    "/products/{code}": {
      "get": {
        "summary": "Get product by code",
        "tags": ["Products"],
        "description": "get product by code",
        "produces": ["application/json"],
        "security": [{ "Bearer": [] }],
        "parameters": [
          {
            "name": "code",
            "in": "path",
            "required": true,
            "description": "code of product that you want to find",
            "type": "string"
          }
        ],
        "responses": { "200": { "description": "login" } }
      },
      "put": {
        "summary": "Update product by code",
        "tags": ["Products"],
        "description": "update product by code",
        "produces": ["application/json"],
        "security": [{ "Bearer": [] }],
        "parameters": [
          {
            "name": "code",
            "in": "path",
            "required": true,
            "description": "code of product that you want to update",
            "type": "string"
          },
          {
            "name": "product data",
            "in": "body",
            "required": true,
            "schema": {
              "properties": {
                "name": { "type": "string", "example": "Headset Razer" },
                "price": { "type": "integer", "example": 45000 },
                "stock": { "type": "integer", "example": 45 }
              }
            }
          }
        ],
        "responses": { "200": { "description": "login" } }
      },
      "delete": {
        "summary": "Delete product by code",
        "tags": ["Products"],
        "description": "update product by code",
        "produces": ["application/json"],
        "security": [{ "Bearer": [] }],
        "parameters": [
          {
            "name": "code",
            "in": "path",
            "required": true,
            "description": "code of product that you want to delete",
            "type": "string"
          }
        ],
        "responses": { "200": { "description": "login" } }
      }
    },
    "/users/login": {
      "post": {
        "summary": "Login",
        "tags": ["Authentication"],
        "description": "Login to get access token",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "credentials",
            "description": "email and password",
            "in": "body",
            "required": true,
            "schema": {
              "properties": {
                "email": {
                  "type": "string",
                  "required": true,
                  "example": "jhondoe@gmail.com"
                },
                "password": {
                  "type": "string",
                  "required": true,
                  "example": "passwordku"
                }
              }
            }
          }
        ],
        "responses": { "200": { "description": "login" } }
      }
    },
    "/users/register": {
      "post": {
        "summary": "Register",
        "tags": ["Authentication"],
        "description": "Register a user and get access token",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "credentials",
            "description": "email, name, and password",
            "in": "body",
            "required": true,
            "type": "string",
            "schema": {
              "properties": {
                "email": {
                  "type": "string",
                  "required": true,
                  "example": "jhondoe@gmail.com"
                },
                "name": {
                  "type": "string",
                  "required": true,
                  "example": "jhon doe"
                },
                "password": {
                  "type": "string",
                  "required": true,
                  "example": "passwordku"
                }
              }
            }
          }
        ],
        "responses": { "200": { "description": "register" } }
      }
    }
  },
  "definitions": {},
  "responses": {},
  "parameters": {}
}
