{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "Project for screening test RLIDev2",
    "description": "Yet Another Node.js Blogg Application API",
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    }
  },
  "host": "localhost:5000",
  "basePath": "/api/v1",
  "tags": [
    {
      "name": "Authentication",
      "description": "API login and register user, here you can get the access token needed to access other api"
    },
    {
      "name": "Products",
      "description": "API for products in the system"
    }
  ],
  "schema": ["http"],
  "consumes": ["application/json"],
  "produces": ["application/json"],
  "securityDefinitions": {
    "Bearer": {
      "type": "apiKey",
      "name": "Authorization",
      "in": "header"
    }
  },
  "paths": {
    "/users/login": {
      "post": {
        "tags": ["Authentication"],
        "description": "Login to get access token",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "credentials",
            "in": "body",
            "description": "email and password",
            "schema": {
              "$ref": "#/definitions/Login"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/users/register": {
      "post": {
        "tags": ["Authentication"],
        "description": "Register user and get access token",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "credentials",
            "in": "body",
            "description": "email, name, and password",
            "schema": {
              "$ref": "#/definitions/Register"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/products": {
      "get": {
        "tags": ["Products"],
        "description": "Get All products",
        "produces": ["application/json"],
        "security": [
          {
            "Bearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Products"
            }
          }
        }
      },
      "post": {
        "tags": ["Products"],
        "description": "Create a product",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "product",
            "in": "body",
            "description": "new product properties",
            "schema": {
              "$ref": "#/definitions/Product"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Product"
            }
          }
        }
      }
    },
    "/products/{code}": {
      "security": [
        {
          "Bearer": []
        }
      ],
      "parameters": [
        {
          "name": "code",
          "in": "path",
          "required": true,
          "description": "code of product that we want to find",
          "type": "string"
        }
      ],
      "get": {
        "tags": ["Products"],
        "summary": "Get product with given code",
        "security": [
          {
            "Bearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "Product found",
            "schema": {
              "type": "object",
              "properties": {}
            }
          }
        }
      },
      "put": {
        "tags": ["Products"],
        "summary": "Update product with given code",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "product",
            "in": "body",
            "description": "Product with new values of properties",
            "schema": {
              "$ref": "#/definitions/Product"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Product updated",
            "schema": {
              "$ref": "#/definitions/Product"
            }
          }
        }
      },
      "delete": {
        "tags": ["Products"],
        "summary": "Delete product with given code",
        "security": [
          {
            "Bearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "Product deleted",
            "schema": {
              "$ref": "#/definitions/Product"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "Login": {
      "required": ["email", "password"],
      "properties": {
        "email": {
          "type": "string"
        },
        "password": {
          "type": "string"
        }
      }
    },
    "Register": {
      "required": ["email", "name", "password"],
      "properties": {
        "email": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "password": {
          "type": "string"
        }
      }
    },
    "Product": {
      "required": ["code", "name", "price", "stock"],
      "properties": {
        "id": {
          "type": "integer",
          "example": 1
        },
        "code": {
          "type": "string",
          "example": "BR001"
        },
        "name": {
          "type": "string",
          "example": "Headset Razer"
        },
        "price": {
          "type": "integer",
          "example": 45000
        },
        "stock": {
          "type": "integer",
          "example": 45
        },
        "createdAt": {
          "type": "string",
          "example": "2020-02-01T02:55:15.000Z"
        },
        "updatedAt": {
          "type": "string",
          "example": "2020-02-01T02:55:15.000Z"
        }
      }
    },
    "Products": {
      "type": "array",
      "$ref": "#/definitions/Product"
    }
  }
}
