{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "Project for screening test RLIDev2",
    "description": "Yet Another Node.js Blogg Application API",
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    }
  },
  "host": "localhost:3000",
  "basePath": "/api/v1",
  "tags": [
    {
      "name": "Products",
      "description": "API for products in the system"
    }
  ],
  "schema": ["http"],
  "consumes": ["application/json"],
  "produces": ["application/json"],
  "paths": {
    "/products": {
      "get": {
        "tags": ["Products"],
        "description": "Get All products",
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Products"
            }
          }
        }
      },
      "post": {
        "tags": ["Products"],
        "description": "Create a product",
        "parameters": [
          {
            "name": "product",
            "in": "body",
            "description": "new product properties",
            "schema": {
              "$ref": "#/definitions/Product"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Product"
            }
          }
        }
      }
    },
    "/products/{code}": {
      "parameters": [
        {
          "name": "code",
          "in": "path",
          "required": true,
          "description": "code of product that we want to find",
          "type": "string"
        }
      ],
      "get": {
        "tags": ["Products"],
        "summary": "Get product with given code",
        "responses": {
          "200": {
            "description": "Product found",
            "schema": {
              "$ref": "#/definitions/Product"
            }
          }
        }
      },
      "put": {
        "tags": ["Products"],
        "summary": "Update product with given code",
        "parameters": [
          {
            "name": "product",
            "in": "body",
            "description": "Product with new values of properties",
            "schema": {
              "$ref": "#/definitions/Product"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Product updated",
            "schema": {
              "$ref": "#/definitions/Product"
            }
          }
        }
      },
      "delete": {
        "tags": ["Products"],
        "summary": "Delete product with given code",
        "responses": {
          "200": {
            "description": "Product deleted",
            "schema": {
              "$ref": "#/definitions/Product"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "Product": {
      "required": ["code", "id"],
      "properties": {
        "code": {
          "type": "string",
          "uniqueItems": true
        },
        "name": {
          "type": "string"
        },
        "price": {
          "type": "number"
        },
        "stock": {
          "type": "number"
        }
      }
    },
    "Products": {
      "type": "array",
      "$ref": "#/definitions/Product"
    }
  }
}
